package org.debugroom.sample.spring.jpa.domain.entity;
// Generated 2016/10/03 20:01:52 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Usr generated by hbm2java
 */
@Entity
@Table(name = "usr", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "login_id") )
public class User implements java.io.Serializable {

	private String userId;
	private String userName;
	private String loginId;
	private Integer ver;
	private Date lastUpdatedDate;
	private Address address;
	private Set<Affiliation> affiliations = new HashSet<Affiliation>(0);
	private Set<Email> emails = new HashSet<Email>(0);

	public User() {
	}

	public User(String userId) {
		this.userId = userId;
	}

	public User(String userId, String userName, String loginId, Integer ver, Date lastUpdatedDate, Address address,
			Set<Affiliation> affiliations, Set<Email> emails) {
		this.userId = userId;
		this.userName = userName;
		this.loginId = loginId;
		this.ver = ver;
		this.lastUpdatedDate = lastUpdatedDate;
		this.address = address;
		this.affiliations = affiliations;
		this.emails = emails;
	}

	@Id

	@Column(name = "user_id", unique = true, nullable = false, length = 8)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "user_name", length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "login_id", unique = true, length = 64)
	public String getLoginId() {
		return this.loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}

	@Column(name = "ver")
	public Integer getVer() {
		return this.ver;
	}

	public void setVer(Integer ver) {
		this.ver = ver;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_date", length = 29)
	public Date getLastUpdatedDate() {
		return this.lastUpdatedDate;
	}

	public void setLastUpdatedDate(Date lastUpdatedDate) {
		this.lastUpdatedDate = lastUpdatedDate;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "usr")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usr")
	public Set<Affiliation> getAffiliations() {
		return this.affiliations;
	}

	public void setAffiliations(Set<Affiliation> affiliations) {
		this.affiliations = affiliations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usr")
	public Set<Email> getEmails() {
		return this.emails;
	}

	public void setEmails(Set<Email> emails) {
		this.emails = emails;
	}

}
